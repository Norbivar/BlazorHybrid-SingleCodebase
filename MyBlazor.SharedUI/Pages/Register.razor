@page "/account/register"

@using MyBlazor.Shared.HTTP
@using MyBlazor.Shared.Notifications
@using MyBlazor.Shared.Pages.Models
@using System.Text.Json
@using System.Text

@inject HttpClient HttpClient
@inject NavigationManager navigationManager;
@inject INotificationService NotificationService
@inject HttpHubService HTTPHub

<h3>Register</h3>

<form method="post" @onsubmit="HandleSubmit">
	<AntiforgeryToken />

	<fieldset class="grid-container">
		<label for="email">E-mail:</label>
		<input type="text" name="email" @bind=email />

		<label for="pass">Password:</label>
		<input type="password" name="pass" @bind=password />

		<label for="pass">Password again:</label>
		<input type="password" name="pass2" @bind=passwordAgain />

		<input type="submit" value="Register!">
	</fieldset>
</form>

@code {
	private string email = "";
	private string password = "";
	private string passwordAgain = "";

	private async Task HandleSubmit()
	{
		var isEmailValid = email.Length > 3 || !email.Contains('@');
		var isPasswordValid = password.Length > 3;

		if (!isEmailValid || !isPasswordValid)
		{
			NotificationService.SendNotificationSwimmer("Error", "E-mail or password is malformed or not at least 3 characters!", NotificationType.Error);
			return;
		}

		if (passwordAgain.Equals(password))
		{
			var response = await HTTPHub.Post.Register(new LoginRegisterModel
			{
				Email = email,
				Password = password
			});

			if (response.Success)
			{
				NotificationService.SendNotificationSwimmer("Success", "Account registered!");
			}
			else
			{
				if (response.Value is not null)
				{
					var errorList = String.Join("\n", response.Value.Errors);
					NotificationService.SendNotificationSwimmer("Error", errorList, NotificationType.Error);
				}
				else
				{
					NotificationService.SendNotificationSwimmer("Error", "Parse error during register!", NotificationType.Error);
				}
			}
		}
		else
		{
			NotificationService.SendNotificationSwimmer("Error", "Entered passwords are different!", NotificationType.Error);
		}
	}
}
