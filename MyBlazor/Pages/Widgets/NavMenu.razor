@using Microsoft.AspNetCore.Components.Authorization
@using MyBlazor.Authentication

@inject IAuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="">
			<span class="oi oi-home" aria-hidden="true"></span>Norbivar Test Webpagerz
		</a>
		<button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
			<span class="navbar-toggler-icon"></span>
		</button>
	</div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<nav class="flex-column">

		@if (!isLoggedIn)
		{
			<!-- Login / Logout stuff -->
			<nav class="flex-column">
				<div class="nav-item px-3">
					<NavLink class="nav-link" href="account/login" Match="NavLinkMatch.All">
						<span class="oi oi-account-login" aria-hidden="true"></span> Login
					</NavLink>
				</div>
				<div class="nav-item px-3">
					<NavLink class="nav-link" href="account/register" Match="NavLinkMatch.All">
						<span class="oi oi-home" aria-hidden="true"></span> Register
					</NavLink>
				</div>
			</nav>
		}
		else
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="authtest" Match="NavLinkMatch.All">
					<span class="oi oi-home" aria-hidden="true"></span> AUTH TEST
				</NavLink>
			</div>

			<div class="nav-item px-3">
				<NavLink class="nav-link" href="counter">
					<span class="oi oi-plus" aria-hidden="true"></span> Counter
				</NavLink>
			</div>
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="fetchdata">
					<span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
				</NavLink>
			</div>
		}
	</nav>

	@if (isLoggedIn)
	{
		<nav class="flex-column">
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
					<span class="oi oi-account-logout" aria-hidden="true"></span> Logout
				</NavLink>
			</div>
		</nav>
	}

	<div id="helper-chevron">
		<span class="oi oi-chevron-right"></span>
	</div>
</div>

@code {
	private bool collapseNavMenu = true;
	private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
	private bool isLoggedIn = false;

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	private async void UpdateNavMenu(Task<AuthenticationState> handler)
	{
		var authResult = await handler;
		isLoggedIn = (authResult.User.Identity is not null && authResult.User.Identity.IsAuthenticated);

		await InvokeAsync(StateHasChanged); // trigger UI refresh for the NavMenu
	}

	protected override void OnInitialized()
	{
		AuthenticationStateProvider.AuthenticationStateChanged += UpdateNavMenu;
	}

	public void Dispose()
	{
		AuthenticationStateProvider.AuthenticationStateChanged -= UpdateNavMenu;
	}
}
